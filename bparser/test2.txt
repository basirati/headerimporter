#define BUFSIZ 512


struct _iobuf
	{

	char *_ptr;
	int _cnt;

	int _cnt;
	char *_ptr;

    int (*functionPtr)(int,int);
	char *_base;
	int _bufsiz;
	//////////////////short _flag;
	int asb[10];
	double myArray[10];
	int _file;
	char *_fptr;		/* ANSI void * */
	char _tinybuf;		/* used when _IONBF */
	char *_filename;
	};

#define FILE struct _iobuf



#define EOF (-1)

#define _IOFBF	    0
#define	_IOREAD	   01
#define	_IOWRT	   02
#define	_IONBF	   04
#define	_IOMYBUF  010
#define	_IOEOF	  020
#define	_IOERR	  040
#define	_IOSTRG	 0100
#define	_IOLBF	 0200
#define	_IORW	 0400
#define _IOFPTR	02000	/* I/O functions take _fptr instead of _file */
#define _IOSTFN	04000	/* filename statically allocated (don't free) */


#define NULL 0


#define SEEK_SET	0
#define SEEK_CUR	1
#define SEEK_END	2

#define _NFILE 3	/* not used; only for compatibility */

extern FILE _iob[];

//////////#define stdin (&_iob[0])
//////////#define stdout (&_iob[1])
//////////#define stderr (&_iob[2])




extern FILE *fdopen();
extern char *fgets();
extern FILE *fopen();
extern FILE *freopen();
extern const int ftell();
extern char *gets();



extern char *saprintf();
extern FILE *stropen();
extern FILE *strnopen();
extern char *vsaprintf();



extern int fclose(FILE *);
extern FILE *fdopen(int, char *);
extern int fflush(FILE *);
extern int fgetc(FILE *);
extern char *fgets(char *, int, FILE *);
extern FILE *fopen(char *, char *);
extern int fprintf(FILE *, char *);
extern int fputc(char, FILE *);
extern int fputs(char *, FILE *);
extern int fread(char *, unsigned int, int, FILE *);
extern FILE *freopen(char *, char *, FILE *);
extern int fscanf(FILE *, char *);
extern int fseek(FILE *, const int, int);
extern const int ftell(FILE *);
extern int fwrite(char *, unsigned int, int, FILE *);
extern char *gets(char *);
/* getw? */
extern int printf(char *);
extern int puts(char *);
/* putw? */
extern void rewind(FILE *);
extern int scanf(char *);
extern int setbuf(FILE *, char *);
extern int setbuffer(FILE *, char *, int);	/* Berkeley */
extern int setlinebuf(FILE *);			/* Berkeley */
extern int setvbuf(FILE *, char *, int, int);
extern int sprintf(char *, char *);
extern int sscanf(char *, char *);
extern int ungetc(char, FILE *);
extern int vfprintf(FILE *, char *, va_list);
extern int vprintf(char *, va_list);
extern int vsprintf(char *, char *, va_list);


extern void fabort(FILE *);
extern int fdclose(FILE *);
extern int flushall(void);
extern int putpad(FILE *, char *, int, int, int);
extern char *saprintf(char *);
extern int scanfiles(int *);
extern int seterrfn(FILE *, int (*)());
extern int setfuncs(FILE *, int *, int *, const int *, int);
extern int snprintf(char *, int, char *);
extern FILE *stropen(char *, char *);
extern FILE *strnopen(char *, int, char *);
extern char *vsaprintf(char *, va_list);
extern FILE _iob[];
extern char *bozboz(char *, va_list);
extern int asbasb();
extern char** boz;
extern char[][][][] x;

typedef void             MYvoid;

/* Comment */
#define VERSION          1

extern void someFunc (MYvoid* , int);

