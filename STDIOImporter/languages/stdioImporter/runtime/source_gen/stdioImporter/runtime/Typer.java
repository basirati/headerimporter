package stdioImporter.runtime;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Iterator;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class Typer {
  public SNode buildType(String type, SNode module) {
    if (type.endsWith("*")) {
      int i = type.length() - type.indexOf("*") - 1;
      String basetype = type.substring(0, type.indexOf("*"));
      return this.makePointerType(this.buildType(basetype, module), i);
    }

    Iterable<SNode> typeDefs;
    typeDefs = ListSequence.fromList(SLinkOperations.getChildren(module, MetaAdapterFactory.getContainmentLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x595522006a5b933dL, 0x595522006a5b9351L, "contents"))).ofType(SNode.class);
    {
      Iterator<SNode> t_it = Sequence.fromIterable(typeDefs).iterator();
      SNode t_var;
      while (t_it.hasNext()) {
        t_var = t_it.next();
        if (SPropertyOperations.getString(t_var, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).equals(type)) {
          SNode tdt = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x54e261614fd09a17L, "com.mbeddr.core.udt.structure.TypeDefType")));
          SLinkOperations.setTarget(tdt, MetaAdapterFactory.getReferenceLink(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x54e261614fd09a17L, 0x54e261614fd09a18L, "typeDef"), t_var);
          return tdt;
        }
      }
    }
    Iterable<SNode> structTypes;
    structTypes = ListSequence.fromList(SLinkOperations.getChildren(module, MetaAdapterFactory.getContainmentLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x595522006a5b933dL, 0x595522006a5b9351L, "contents"))).ofType(SNode.class);
    {
      Iterator<SNode> t_it = Sequence.fromIterable(structTypes).iterator();
      SNode t_var;
      while (t_it.hasNext()) {
        t_var = t_it.next();
        if (SPropertyOperations.getString(t_var, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) == type) {
          SNode stt = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x58bef62304fc0a38L, "com.mbeddr.core.udt.structure.StructType")));
          SLinkOperations.setTarget(stt, MetaAdapterFactory.getReferenceLink(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x58bef62304fc0a38L, 0x58bef62304fc0a39L, "struct"), t_var);
          return stt;
        }
      }
    }

    if (this.mapType(type) != null) {
      return this.mapType(type);
    } else {
      SNode tdef = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x54e261614fd09a11L, "com.mbeddr.core.udt.structure.TypeDef")));
      SPropertyOperations.set(tdef, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), type);
      SNode pt = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3bf5377ae9044dedL, 0x97545a516023bfaaL, 0x3e0cae5e366d630L, "com.mbeddr.core.pointers.structure.PointerType")));
      SLinkOperations.setTarget(pt, MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x6bbcdccef5e46755L, 0x6bbcdccef5e46756L, "baseType"), SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x6d872ef9245a0d19L, "com.mbeddr.core.expressions.structure.VoidType"))));
      SLinkOperations.setTarget(tdef, MetaAdapterFactory.getContainmentLink(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x54e261614fd09a11L, 0x54e261614fd09a16L, "original"), pt);
      ListSequence.fromList(SLinkOperations.getChildren(module, MetaAdapterFactory.getContainmentLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x595522006a5b933dL, 0x595522006a5b9351L, "contents"))).addElement(tdef);
      SNode tdt = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x54e261614fd09a17L, "com.mbeddr.core.udt.structure.TypeDefType")));
      SLinkOperations.setTarget(tdt, MetaAdapterFactory.getReferenceLink(0xefda956e491e4f00L, 0xba1436af2f213ecfL, 0x54e261614fd09a17L, 0x54e261614fd09a18L, "typeDef"), tdef);
      return tdt;
    }
  }

  private SNode makePointerType(SNode basetype, int n) {
    SNode ptype = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3bf5377ae9044dedL, 0x97545a516023bfaaL, 0x3e0cae5e366d630L, "com.mbeddr.core.pointers.structure.PointerType")));
    SLinkOperations.setTarget(ptype, MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x6bbcdccef5e46755L, 0x6bbcdccef5e46756L, "baseType"), basetype);
    for (int i = 0; i < n; i++) {
      SNode temp = ptype;
      ptype = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3bf5377ae9044dedL, 0x97545a516023bfaaL, 0x3e0cae5e366d630L, "com.mbeddr.core.pointers.structure.PointerType")));
      SLinkOperations.setTarget(ptype, MetaAdapterFactory.getContainmentLink(0xa9d696470840491eL, 0xbf392eb0805d2011L, 0x6bbcdccef5e46755L, 0x6bbcdccef5e46756L, "baseType"), temp);
    }
    return ptype;
  }
  private SNode mapType(String type) {
    if (type.startsWith("const")) {
      type = type.substring(6);
    }
    if (type.startsWith("int")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x7af69e2e83a1ba6cL, "com.mbeddr.core.expressions.structure.IntType")));
    } else if (type.startsWith("unsigned int")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x75739ed9f39c4d7aL, "com.mbeddr.core.expressions.structure.UnsignedIntType")));
    } else if (type.startsWith("unsigned long")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x75739ed9f39de216L, "com.mbeddr.core.expressions.structure.UnsignedLongType")));
    } else if (type.startsWith("long int")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x1336d4a7c17a889L, "com.mbeddr.core.expressions.structure.LongType")));
    } else if (type.startsWith("long double")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x7efa919be7fda110L, "com.mbeddr.core.expressions.structure.LongDoubleType")));
    } else if (type.startsWith("short")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x2e4bd40f1cc058e8L, "com.mbeddr.core.expressions.structure.ShortType")));
    } else if (type.startsWith("long")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x1336d4a7c17a889L, "com.mbeddr.core.expressions.structure.LongType")));
    } else if (type.startsWith("unsigned short")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x84357eb398a1b43L, "com.mbeddr.core.expressions.structure.UnsignedShortType")));
    } else if (type.startsWith("char")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x17196bfd1c52fd5cL, "com.mbeddr.core.expressions.structure.CharType")));
    } else if (type.startsWith("unsigned char")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x75739ed9f39c4d6cL, "com.mbeddr.core.expressions.structure.UnsignedCharType")));
    } else if (type.startsWith("void")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x6d872ef9245a0d19L, "com.mbeddr.core.expressions.structure.VoidType")));
    } else if (type.startsWith("int8_t")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x75739ed9f39e387aL, "com.mbeddr.core.expressions.structure.Int8tType")));
    } else if (type.startsWith("int16_t")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x75739ed9f39e3883L, "com.mbeddr.core.expressions.structure.Int16tType")));
    } else if (type.startsWith("int32_t")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x75739ed9f39e3888L, "com.mbeddr.core.expressions.structure.Int32tType")));
    } else if (type.startsWith("float")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x41c7cca6a7ab279fL, "com.mbeddr.core.expressions.structure.FloatType")));
    } else if (type.startsWith("double")) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x7b064baaf4444619L, "com.mbeddr.core.expressions.structure.DoubleType")));
    }
    return null;
  }



}
