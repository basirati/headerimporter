package stdioImporter.runtime;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class Typer {
  public SNode buildType(String type, Iterable<SNode> typedefs) {
    return this.getType(type);
  }



  private SNode getType(String type) {
    SNode nodetype = this.mapType(type);
    if (type.endsWith("*")) {
      nodetype = this.makePointerType(type, nodetype);
    }
    return nodetype;
  }

  private SNode makePointerType(String type, SNode basetype) {
    SNode ptype = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
    SLinkOperations.setTarget(ptype, "baseType", basetype, true);
    for (int i = type.indexOf("*"); i < type.lastIndexOf("*"); i++) {
      SNode temp = ptype;
      ptype = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
      SLinkOperations.setTarget(ptype, "baseType", temp, true);
    }
    return ptype;
  }

  private SNode mapType(String type) {
    if (type.startsWith("int")) {
      return SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.IntType", null);
    } else if (type.startsWith("unsigned int")) {
      return SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.UnsignedIntType", null);
    } else if (type.startsWith("char")) {
      return SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.CharType", null);
    } else if (type.startsWith("unsigned char")) {
      return SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.UnsignedCharType", null);
    }
    return null;
  }




}
